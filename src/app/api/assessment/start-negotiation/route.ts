// src/app/api/assessment/start-negotiation/route.ts

import { NextRequest, NextResponse } from 'next/server';
import { extractTokenFromHeader, authenticateToken } from '@/lib/auth';
import { getConnectionWithRetry } from '@/lib/database';

export async function POST(request: NextRequest) {
  let connection;
  try {
    console.log("1. 'start-negotiation' API called.");
    const authHeader = request.headers.get('authorization');
    const token = extractTokenFromHeader(authHeader);
    if (!token) {
      return NextResponse.json({ success: false, message: 'ØªÙˆÚ©Ù† Ø§Ø±Ø§Ø¦Ù‡ Ù†Ø´Ø¯Ù‡ Ø§Ø³Øª' }, { status: 401 });
    }
    const decodedToken = authenticateToken(token);
    const userId = decodedToken.userId;
    console.log(`2. User authenticated with ID: ${userId}`);

    console.log("3. Attempting to get database connection...");
    connection = await getConnectionWithRetry();
    console.log("4. Database connection successful.");

    const [users] = await connection.execute('SELECT first_name, last_name FROM users WHERE id = ?', [userId]);
    const userData = (users as any[])[0];

    if (!userData) {
        console.error(`5. CRITICAL: User with ID ${userId} not found in database.`);
        return NextResponse.json({ success: false, message: 'Ú©Ø§Ø±Ø¨Ø± Ø´Ù†Ø§Ø³Ø§ÛŒÛŒ Ù†Ø´Ø¯.' }, { status: 404 });
    }
    
    const userName = `${userData.first_name || ''} ${userData.last_name || ''}`.trim() || 'Ú©Ø§Ø±Ø¨Ø±';
    console.log(`5. User found: ${userName}`);

    console.log("6. Attempting to insert into 'assessments' table with questionnaire_id=6...");
    const [result] = await connection.execute(
      'INSERT INTO assessments (user_id, questionnaire_id, created_at) VALUES (?, ?, NOW())',
      [userId, 6] // ID=6 for Negotiation questionnaire
    );
    const assessmentId = (result as any).insertId;
    if (!assessmentId) {
        throw new Error("Failed to create assessment record.");
    }
    console.log(`7. 'assessments' record created with ID: ${assessmentId}`);
    
    const openingLineTemplate = "ÙˆÙ‚Øª Ø¨Ø®ÛŒØ± {user_name}ØŒ ØªÙˆÚ©Ù„ÛŒ Ù‡Ø³ØªÙ…. Ù…Ù…Ù†ÙˆÙ† Ø§Ø² ÙˆÙ‚ØªÛŒ Ú©Ù‡ Ú¯Ø°Ø§Ø´ØªÛŒØ¯. Ù…Ø§ Ù¾ÛŒØ´Ù†Ù‡Ø§Ø¯ØªÙˆÙ† Ø±Ùˆ Ø¨Ø±Ø§ÛŒ ØªØ§Ù…ÛŒÙ† Ù‚Ø·Ø¹Ø§Øª Ø¨Ø±Ø±Ø³ÛŒ Ú©Ø±Ø¯ÛŒÙ…. Ø±Ø§Ø³ØªØ´ Ø±Ùˆ Ø¨Ø®ÙˆØ§Ù‡ÛŒØ¯ØŒ Ù‚ÛŒÙ…ØªÛŒ Ú©Ù‡ Ø§Ø±Ø§Ø¦Ù‡ Ø¯Ø§Ø¯ÛŒØ¯ Ø®ÛŒÙ„ÛŒ Ø¨Ø§Ù„Ø§ØªØ± Ø§Ø² Ø­Ø¯ Ø§Ù†ØªØ¸Ø§Ø± Ùˆ Ø¨ÙˆØ¯Ø¬Ù‡ Ù…Ø§Ø³Øª. Ø§Ú¯Ø± Ø¨Ø®ÙˆØ§ÛŒÙ… Ù‡Ù…Ú©Ø§Ø±ÛŒ Ø±Ùˆ Ø§Ø¯Ø§Ù…Ù‡ Ø¨Ø¯ÛŒÙ…ØŒ Ø¨Ø§ÛŒØ¯ Ø¨Ù‡ Ø±Ø§Ù‡ Ø­Ù„ Ø¨Ù‡ØªØ±ÛŒ Ø¨Ø±Ø³ÛŒÙ…. Ù¾ÛŒØ´Ù†Ù‡Ø§Ø¯ Ø´Ù…Ø§ Ø¨Ø±Ø§ÛŒ Ø´Ø±ÙˆØ¹ Ú†ÛŒÙ‡ØŸ";
    const openingLine = openingLineTemplate.replace('{user_name}', userName);

    console.log("8. Attempting to insert into 'chat_messages' table...");
    await connection.execute(
      'INSERT INTO chat_messages (assessment_id, user_id, message_type, content, character_name) VALUES (?, ?, ?, ?, ?)',
      [assessmentId, userId, 'ai', openingLine, 'Ø¢Ù‚Ø§ÛŒ ØªÙˆÚ©Ù„ÛŒ']
    );
    console.log("9. Initial chat message inserted successfully.");

    return NextResponse.json({
      success: true,
      message: 'Ø¢Ø²Ù…ÙˆÙ† Ù…Ù‡Ø§Ø±Øªâ€ŒÙ‡Ø§ÛŒ Ù…Ø°Ø§Ú©Ø±Ù‡ Ø´Ø±ÙˆØ¹ Ø´Ø¯',
      chatId: assessmentId,
      initialMessages: [{ role: 'model', text: openingLine }]
    });

  } catch (error: any) {
    // This will now log the detailed error to your server console
    console.error('ðŸ’¥ðŸ’¥ðŸ’¥ CRITICAL ERROR in start-negotiation API ðŸ’¥ðŸ’¥ðŸ’¥:', error);
    return NextResponse.json({ success: false, message: 'Ø®Ø·Ø§ÛŒ Ø¯Ø§Ø®Ù„ÛŒ Ø³Ø±ÙˆØ±', error: error.message }, { status: 500 });
  } finally {
    if (connection) {
      console.log("10. Releasing database connection.");
      connection.release();
    }
  }
}
